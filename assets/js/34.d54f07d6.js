(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{391:function(e,t,a){"use strict";a.r(t);var r=a(44),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex布局"}},[e._v("#")]),e._v(" Flex布局")]),e._v(" "),a("blockquote",[a("p",[e._v("以下内容主要参考 "),a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flex 布局教程：语法篇"),a("OutboundLink")],1),e._v("。\n仅供自己参考查阅使用。")])]),e._v(" "),a("h2",{attrs:{id:"_1-什么是flex布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是flex布局"}},[e._v("#")]),e._v(" 1. 什么是Flex布局")]),e._v(" "),a("blockquote",[a("p",[e._v("Flex布局（Flexible Box，弹性布局），用来为盒模型提供最大的灵活性。")])]),e._v(" "),a("ul",[a("li",[e._v("任何容器都可以指定为 Flex 布局，包括行内元素(inline-flex)。")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d05b6d75c3bf17731.png",alt:""}})]),e._v(" "),a("ul",[a("li",[e._v("设为 Flex 布局以后，子元素的"),a("code",[e._v("float")]),e._v("、"),a("code",[e._v("clear")]),e._v("和"),a("code",[e._v("vertical-align")]),e._v("属性将失效。")])]),e._v(" "),a("h2",{attrs:{id:"_2-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本概念"}},[e._v("#")]),e._v(" 2. 基本概念")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("容器：")]),e._v(" 指定为flex布局的元素。")]),e._v(" "),a("li",[a("strong",[e._v("项目：")]),e._v(" "),a("strong",[e._v("容器")]),e._v("的直接子元素(孙子元素不是直接子元素)。")]),e._v(" "),a("li",[a("strong",[e._v("主轴：")]),e._v(" "),a("strong",[e._v("项目")]),e._v("排列的方向。")]),e._v(" "),a("li",[a("strong",[e._v("交叉轴：")]),e._v(" 与"),a("strong",[e._v("主轴")]),e._v("垂直的方向。")])]),e._v(" "),a("h2",{attrs:{id:"_3-容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-容器属性"}},[e._v("#")]),e._v(" 3. 容器属性")]),e._v(" "),a("h3",{attrs:{id:"_1-flex-direction-规定主轴的方向-即项目的排列方向。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-flex-direction-规定主轴的方向-即项目的排列方向。"}},[e._v("#")]),e._v(" 1). flex-direction：规定主轴的方向，即项目的排列方向。")]),e._v(" "),a("p",[a("code",[e._v("flex-direction: column-reverse | column | row | row-reverse;")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d0835f7e689a17376.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_2-flex-wrap-规定主轴上项目的换行方式。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-wrap-规定主轴上项目的换行方式。"}},[e._v("#")]),e._v(" 2). flex-wrap：规定主轴上项目的换行方式。")]),e._v(" "),a("p",[a("code",[e._v("flex-wrap: nowrap(不换行) | wrap(换行，第一行在下方) | wrap-reverse(换行，第一行在上方);")])]),e._v(" "),a("h3",{attrs:{id:"_3-flex-flow-flex-direction和flex-wrap的简写-默认为row-nowrap。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-flex-flow-flex-direction和flex-wrap的简写-默认为row-nowrap。"}},[e._v("#")]),e._v(" 3). flex-flow：flex-direction和flex-wrap的简写，默认为row nowrap。")]),e._v(" "),a("h3",{attrs:{id:"_4-justify-content-主轴上的对齐方式。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-justify-content-主轴上的对齐方式。"}},[e._v("#")]),e._v(" 4). justify-content：主轴上的对齐方式。")]),e._v(" "),a("p",[a("code",[e._v("justify-content: flex-start | flex-end | center | space-between | space-around;")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d083820548ac86028.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_5-align-items-交叉轴上的对齐方式。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-align-items-交叉轴上的对齐方式。"}},[e._v("#")]),e._v(" 5). align-items：交叉轴上的对齐方式。")]),e._v(" "),a("p",[a("code",[e._v("align-items: flex-start | flex-end | center | baseline | stretch;")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d08389bc492477095.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_6-align-content-多根主轴时-它们在交叉轴上的对齐方式。若只有一根主轴-该属性无效。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-align-content-多根主轴时-它们在交叉轴上的对齐方式。若只有一根主轴-该属性无效。"}},[e._v("#")]),e._v(" 6). align-content：多根主轴时，它们在交叉轴上的对齐方式。若只有一根主轴，该属性无效。")]),e._v(" "),a("p",[a("code",[e._v("align-content: flex-start | flex-end | center | space-between | space-around | stretch;")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d0839aaa0ae556400.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"_4-项目属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-项目属性"}},[e._v("#")]),e._v(" 4. 项目属性")]),e._v(" "),a("h3",{attrs:{id:"_1-order-项目的排列顺序。数值越小-排列越靠前-默认为0。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-order-项目的排列顺序。数值越小-排列越靠前-默认为0。"}},[e._v("#")]),e._v(" 1). order：项目的排列顺序。数值越小，排列越靠前，默认为0。")]),e._v(" "),a("p",[a("code",[e._v("order: <integer>;")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d083aedd8d4515581.png",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"_2-flex-grow-项目的放大比例-默认为0-即存在剩余空间也不放大。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-grow-项目的放大比例-默认为0-即存在剩余空间也不放大。"}},[e._v("#")]),e._v(" 2). flex-grow：项目的放大比例，默认为0，即存在剩余空间也不放大。")]),e._v(" "),a("p",[a("code",[e._v("flex-grow: <number>; /* default 0 */")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d083b785e8b926074.png",alt:""}}),e._v("\n均为1时，等分剩余空间；一个为2其它为1，则前者等分的大小是后者的2倍。")]),e._v(" "),a("h3",{attrs:{id:"_3-flex-shrink-项目的缩小比例-默认为1-即空间不足时将缩小。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-flex-shrink-项目的缩小比例-默认为1-即空间不足时将缩小。"}},[e._v("#")]),e._v(" 3). flex-shrink：项目的缩小比例，默认为1，即空间不足时将缩小。")]),e._v(" "),a("p",[a("code",[e._v("flex-shrink: <number>; /* default 1 */")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/img/5d083c698797265542.jpg",alt:""}}),e._v("\n数值越大，缩小比例越大，为0时不缩小。")]),e._v(" "),a("h3",{attrs:{id:"_4-flex-basis-分配多余空间之前-项目占据主轴大小。默认值为auto-即项目本来的大小。-flex利用该属性计算是否存在剩余空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-flex-basis-分配多余空间之前-项目占据主轴大小。默认值为auto-即项目本来的大小。-flex利用该属性计算是否存在剩余空间"}},[e._v("#")]),e._v(" 4). flex-basis：分配多余空间之前，项目占据主轴大小。默认值为auto，即项目本来的大小。(flex利用该属性计算是否存在剩余空间)")]),e._v(" "),a("p",[a("code",[e._v("flex-basis: <length> | auto;")])]),e._v(" "),a("p",[e._v("设为固定值(如100px)时，项目占据固定空间。")]),e._v(" "),a("h3",{attrs:{id:"_5-flex-是flex-grow、flex-shrink、flex-basis的简写-默认值0-1-auto-即不可自动放大、可自动缩小、默认占据本来大小。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-flex-是flex-grow、flex-shrink、flex-basis的简写-默认值0-1-auto-即不可自动放大、可自动缩小、默认占据本来大小。"}},[e._v("#")]),e._v(" 5). flex：是flex-grow、flex-shrink、flex-basis的简写，默认值"),a("code",[e._v("0 1 auto")]),e._v("，即不可自动放大、可自动缩小、默认占据本来大小。")]),e._v(" "),a("p",[e._v("三个快捷值：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("flex: auto;")]),e._v("，表示"),a("code",[e._v("1 1 auto")]),e._v("，即可自动放大、可自动缩小、默认占据本来大小。当旁边元素未设置flex时(取默认值0 1 auto)，会被挤压。")]),e._v(" "),a("li",[a("code",[e._v("flex: none;")]),e._v("，表示"),a("code",[e._v("0 0 auto")]),e._v("，即不可自动放大、不可自动缩小、默认占据本来大小。")]),e._v(" "),a("li",[a("code",[e._v("flex: 1;")]),e._v("，表示"),a("code",[e._v("0 0 0%")]),e._v("，即可自动放大、可自动缩小、默认不占据空间。不会挤压旁边元素，适合做等分、自适应。")])]),e._v(" "),a("h3",{attrs:{id:"_6-align-self-指定该项目在交叉轴的对齐方式-可覆盖容器的align-item设置。默认auto-表示继承容器的设置。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-align-self-指定该项目在交叉轴的对齐方式-可覆盖容器的align-item设置。默认auto-表示继承容器的设置。"}},[e._v("#")]),e._v(" 6). align-self：指定该项目在交叉轴的对齐方式，可覆盖容器的"),a("code",[e._v("align-item")]),e._v("设置。默认auto，表示继承容器的设置。")]),e._v(" "),a("p",[a("code",[e._v("align-self: auto | flex-start | flex-end | center | baseline | stretch;")])]),e._v(" "),a("h1",{attrs:{id:"flex实战示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex实战示例"}},[e._v("#")]),e._v(" Flex实战示例")]),e._v(" "),a("blockquote",[a("p",[e._v("场景一：行数不定列数固定(父容器宽度固定)，采用space-between或space-around排布，最后一行元素个数不够时无法局左排布。")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('// 解决方法1：利用伪元素after或before设置父元素\n.father:after{\n    content:"";\n    display:block;\n}\n// 通常由于父元素设置space-between后会覆盖子元素的一部分margin值，可调整margin值使子元素间隔一致\n.son {\n    margin: xx;\n}\n\n// 解决方法2：给最后一个子元素设置margin-right\n.son:last-child {\n    margin-right: auto;\n}\n')])])]),a("blockquote",[a("p",[e._v("场景二：实现左右宽度固定、中间宽度自适应的散列布局")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v('<div class="wrapper" style="height: 200px;background: #ccc;">\n  <div class="left" style="height: 100%;width: 300px;background: cadetblue;">这是左栏</div>\n  <div class="center" style="height: 100%;background: chocolate;">\n    这是中栏，且自适应宽度。这是中栏，且自适应宽度。这是中栏，且自适应宽度。\n  </div>\n  <div class="right" style="height: 100%;width: 300px;background: cadetblue;">这是右栏</div>\n</div>\n\n\x3c!-- 方法一：flex，使用快捷值auto --\x3e\n.wrapper {\n  display: flex;\n}\n.center {\n  flex: auto; /* 相当于 1 1 auto */\n}\n/* flex布局 子元素(项目)默认flex: 0 1 auto; 1表示可缩小，\n所以希望项目宽度固定时，设置width属性无效，需设置flex属性 */\n.left, .right {\n  flex: 0 0 300px;\n}\n\n\x3c!-- 方法二：flex，使用快捷值1 --\x3e\n.wrapper {\n  display: flex;\n}\n.center {\n  flex: 1; /* 相当于 1 1 0% */\n}\n/* flex布局 flex:1 center默认不占据宽度，所以不会挤压left、right的width，\n此时width属性有效效，不需为left、right设置flex属性 */\n.left, .right {\n  \n}\n\n\x3c!-- 方法三：float：此时html标签顺序应该为 left、right、center，\n  因为浮动是在当前位置的水平方向浮动，若center在right前边，将会把right挤到下边一行 --\x3e\n.left {\n  float: left;\n}\n.right {\n  float: right;\n}\n\n\x3c!-- 方法四：利用 CSS3 的calc函数 --\x3e\n.wrapper {\n  /* inline元素换行导致的间隙，可通过父级字体设为0解决 */\n  font-size: 0;\n}\n.left, .right, .center {\n  display: inline-block;\n  font-size: 14px;\n}\n.left, .right {\n  vertical-align: bottom;\n}\n.center {\n  width: calc(100% - 600px);\n}\n\n\x3c!-- 方法五：绝对定位 --\x3e\n.wrapper {\n  position: relative;\n}\n.left {\n  position: absolute;\n  left: 0;\n}\n.right {\n  position: absolute;\n  right: 0;\n}\n.center {\n  position: absolute;\n  left: 300px;\n  right: 300px;\n}\n\n\x3c!-- 方法六：table布局 --\x3e\n.wrapper {\n  display: table;\n}\n.left, .right, .center {\n  dispaly: table-cell;\n}\n.left, .right {\n  width: 300px;\n}\n\n\x3c!-- 方法七：grid 布局：此时无需设置单个元素的宽高 --\x3e\n.wrapper {\n  display: grid;\n  width: 100%;\n  grid-template-rows: 200px;\n  grid-template-columns: 300px auto 300px;\n}')])])])])}),[],!1,null,null,null);t.default=n.exports}}]);