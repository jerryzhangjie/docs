(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{442:function(t,e,r){"use strict";r.r(e);var v=r(44),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"背景知识"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背景知识"}},[t._v("#")]),t._v(" 背景知识")]),t._v(" "),r("blockquote",[r("p",[t._v("使用git的每次提交，Git都会自动把它们串成一条时间线，这条时间线就是一个分支。如果没有新建分支，那么只有一条时间线，即只有一个分支，在Git里，这个分支叫主分支，即master分支。有一个HEAD指针指向当前分支（只有一个分支的情况下会指向master，而master是指向最新提交）。每个版本都会有自己的版本信息，如特有的版本号、版本名等。如下图，假设只有一个分支：")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/picgo/git.png",alt:"git"}})]),t._v(" "),r("h2",{attrs:{id:"回退-get-reset"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#回退-get-reset"}},[t._v("#")]),t._v(" 回退(get reset)")]),t._v(" "),r("p",[r("strong",[t._v("原理")]),t._v("：git reset 的作用是修改 HEAD 的位置，即将 HEAD 指向的位置改变为之前存在的某个版本。"),r("br"),t._v(" "),r("strong",[t._v("适用场景")]),t._v("：想恢复到之前某个提交的版本，且该版本之后提交的版本我们都不要了。")]),t._v(" "),r("p",[t._v("如下图所示，假设我们要从版本三回退到版本一：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/picgo/get-reset.png",alt:"get-reset"}})]),t._v(" "),r("p",[t._v("具体操作：")]),t._v(" "),r("ol",[r("li",[t._v("查看版本号")])]),t._v(" "),r("p",[r("code",[t._v("git log")]),t._v("  或在 github 中查看 commit 历史")]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("使用版本号回退")])]),t._v(" "),r("p",[r("code",[t._v("git reset --hard 目标版本号")])]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("提交更改至远程")])]),t._v(" "),r("p",[r("code",[t._v("git push -f")])]),t._v(" "),r("p",[t._v("如果用 "),r("code",[t._v("git push")]),t._v(" 会报错，因为本地 HEAD 指向的版本比远程的旧。此时强制 push 就可以了。")]),t._v(" "),r("h2",{attrs:{id:"反做"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#反做"}},[t._v("#")]),t._v(" 反做")]),t._v(" "),r("p",[r("strong",[t._v("原理")]),t._v("： git revert是用于“反做”某一个版本，以达到撤销该版本的修改的目的。"),r("br"),t._v(" "),r("strong",[t._v("适用场景")]),t._v("：如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法。")]),t._v(" "),r("p",[t._v("比如，我们commit了三个版本（版本一、版本二、 版本三），突然发现版本二不行（如：有bug），想要撤销版本二，但又不想影响撤销版本三的提交，就可以用 git revert 命令来反做版本二，生成新的版本四，这个版本四里会保留版本三的东西，但撤销了版本二的东西：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/picgo/git-revert.png",alt:"git-revert"}})]),t._v(" "),r("p",[t._v("具体操作：")]),t._v(" "),r("ol",[r("li",[t._v("查看版本号")])]),t._v(" "),r("p",[r("code",[t._v("git log")]),t._v("  或在 github 中查看 commit 历史")]),t._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[t._v("使用版本号反做")])]),t._v(" "),r("p",[r("code",[t._v("git revert -n 目标版本号")])]),t._v(" "),r("p",[t._v("注意： 这里可能会出现冲突，那么需要手动修改冲突的文件。而且要git add 文件名。")]),t._v(" "),r("p",[t._v("提交本地分支")]),t._v(" "),r("p",[r("code",[t._v('git commit -m "备注信息"')])]),t._v(" "),r("ol",{attrs:{start:"3"}},[r("li",[t._v("提交更改至远程")])]),t._v(" "),r("p",[r("code",[t._v("git push")])])])}),[],!1,null,null,null);e.default=_.exports}}]);