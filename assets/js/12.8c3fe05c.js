(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{369:function(e,t,n){"use strict";n.r(t);var a=n(44),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"dom事件的级别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom事件的级别"}},[e._v("#")]),e._v(" DOM事件的级别")]),e._v(" "),n("ul",[n("li",[e._v("DOM0  element.onclick = function() {} 或 html 中添加 onclick 事件")]),e._v(" "),n("li",[e._v("DOM2  element.addEventListener('click', function(){}, false)  // false 冒泡阶段触发(默认)；true 捕获阶段触发")]),e._v(" "),n("li",[e._v("DOM3  element.addEventListener('keyup', function(){}, false)")])]),e._v(" "),n("p",[e._v("DOM0 与 DOM2 绑定事件的区别？")]),e._v(" "),n("blockquote",[n("p",[e._v("DOM0绑定的事件监听函数会覆盖之前绑定的事件监听函数。（只能绑定一个）"),n("br"),e._v("\nDOM2同一元素上的事件监听函数互不影响，而且可以独立取消，调用顺序和监听顺序一致。（能绑定多个）")])]),e._v(" "),n("h2",{attrs:{id:"dom事件模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom事件模型"}},[e._v("#")]),e._v(" DOM事件模型")]),e._v(" "),n("p",[e._v("捕获、冒泡")]),e._v(" "),n("h2",{attrs:{id:"dom事件流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom事件流"}},[e._v("#")]),e._v(" DOM事件流")]),e._v(" "),n("p",[e._v("捕获 ——> 目标阶段 ——> 冒泡")]),e._v(" "),n("h2",{attrs:{id:"描述dom事件捕获的具体流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#描述dom事件捕获的具体流程"}},[e._v("#")]),e._v(" 描述DOM事件捕获的具体流程")]),e._v(" "),n("p",[e._v("window - document - html - body - ...")]),e._v(" "),n("h2",{attrs:{id:"event对象的常见应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#event对象的常见应用"}},[e._v("#")]),e._v(" Event对象的常见应用")]),e._v(" "),n("p",[e._v("event.preventDefault()            // 例如，a 标签，阻止默认跳转行为\nevent.stopPropagation()           // 阻止冒泡\nevent.stopImmediatePropagation()  // 假如分别绑定了 a、b 两个事件，a 中加入该方法，可阻止继续执行 b 事件\nevent.currentTarget               // 用于事件代理中，获取被点击的子元素对象\nevent.target                      // 获取当前事件对象，事件代理中代表的是父元素")]),e._v(" "),n("h2",{attrs:{id:"自定义事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件"}},[e._v("#")]),e._v(" 自定义事件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("// 首先需要提前定义好事件，获得事件对象，并且注册相关的EventListener\nvar myEvent = new CustomEvent('event_name', { \n    detail: { title: 'This is title!'},\n});\nwindow.addEventListener('event_name', function(event){\n    console.log('得到标题为：', event.detail.title);\n}, true);   // false - 默认，冒泡   true - 捕获\n// 随后在对应的元素上执行该事件对象，从而触发事件\nif(window.dispatchEvent) {  \n    window.dispatchEvent(myEvent);\n} else {\n    window.fireEvent(myEvent);  // IE8低版本兼容\n}\n\n\x3c!-- 注 --\x3e\nnew Event('event_name');  // 也可定义事件，但无法传参\n")])])]),n("h2",{attrs:{id:"如何给-html-节点绑定事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何给-html-节点绑定事件"}},[e._v("#")]),e._v(" 如何给 html 节点绑定事件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("// 需要用 document.documentElement 来表示 document 上的 html\ndocument.documentElement.addEventListener()\n")])])]),n("h2",{attrs:{id:"鼠标事件执行顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#鼠标事件执行顺序"}},[e._v("#")]),e._v(" 鼠标事件执行顺序")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("    // mouseover —— mouseout        会重复触发，会冒泡\n    // mouseenter —— mouseleave     不会重复触发，不会冒泡\n    mouseover -> mouseenter -> mouseout -> mouseleave\n")])])]),n("h2",{attrs:{id:"body绑定滚动事件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#body绑定滚动事件"}},[e._v("#")]),e._v(" body绑定滚动事件")]),e._v(" "),n("p",[e._v("body仅能通过 "),n("code",[e._v("document.querySelector('body').onscroll = function() { console.log(1) }")]),e._v(" 绑定滚动。\n"),n("code",[e._v("addEventListener")]),e._v("添加的无效")]),e._v(" "),n("p",[e._v("什么原因？？？？")]),e._v(" "),n("p",[e._v("scroll不会冒泡，addEventListener默认是冒泡的。")])])}),[],!1,null,null,null);t.default=s.exports}}]);