(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{370:function(o,n,t){"use strict";t.r(n);var e=t(44),r=Object(e.a)({},(function(){var o=this,n=o.$createElement,t=o._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[t("ol",[t("li",[o._v("都可以遍历数组：for_in 返回的是键名(序号下标)，而 for_of 返回的是值。")])]),o._v(" "),t("p",[o._v("`\nconst arr = ['a', 'b', 'c']\n// for in 循环\nfor (let i in arr) {\nconsole.log(i)\n// 0\n// 1\n// 2\n}")]),o._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[o._v("    // for of\n    for (let i of arr) {\n        console.log(i)\n        // a\n        // b\n        // c\n    }\n")])])]),t("p",[o._v("`")]),o._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[o._v("for_in 可遍历对象返回键名，但 for_of 不能遍历对象(因为对象不具有 iterator 接口)。")])]),o._v(" "),t("p",[t("code",[o._v("const obj = { a: 1, b: 2, c: 3 } for (let i in obj) { console.log(i) // a // b // c } for (let i of obj) { console.log(i) // Uncaught TypeError: obj is not iterable 报错了 }")])]),o._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[o._v("vue 中 v-for")])]),o._v(" "),t("p",[o._v("V-for 循环遍历数组时推荐使用 of，语法格式为（item，index）")]),o._v(" "),t("p",[o._v("item:在每次迭代时，item 会被赋值为不同的数组元素的值。")]),o._v(" "),t("p",[o._v("index:当前元素的索引。")]),o._v(" "),t("p",[o._v("V-for 循环对象的时使用 in，语法格式为(item,name,index)")]),o._v(" "),t("p",[o._v("item")]),o._v(" "),t("p",[o._v("在每次迭代时，item 会被赋值为不同的对象的属性值。")]),o._v(" "),t("p",[o._v("name")]),o._v(" "),t("p",[o._v("在每次迭代时，name 会被赋值为不同的键名。")]),o._v(" "),t("p",[o._v("index")]),o._v(" "),t("p",[o._v("当前元素的索引。")])])}),[],!1,null,null,null);n.default=r.exports}}]);