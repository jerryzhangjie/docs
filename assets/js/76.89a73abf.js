(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{431:function(t,e,n){"use strict";n.r(e);var v=n(44),a=Object(v.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"整体思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#整体思路"}},[t._v("#")]),t._v(" 整体思路")]),t._v(" "),n("p",[t._v("因为性能优化是一个很复杂和庞大的工作，两种场景：1. 专门优化某个细节，那用对应的策略即可；2. 对整个项目实施优化，那就得有个整体思路。")]),t._v(" "),n("p",[t._v("关键渲染路径（CRP）：url ——> DNS解析获得IP ——> TCP三次握手建立连接 ——> http请求/响应 ——> 解析渲染")]),t._v(" "),n("p",[t._v("DSN解析获得IP：DNS预解析，在head区域，将项目会用到的域名，通过"),n("code",[t._v("dns-prefetch")]),t._v("进行预解析。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('    <link ref="dbs-prefetch" href="//search.baidu.com"/>\n    <link ref="dbs-prefetch" href="//map.baidu.com"/>\n')])])]),n("p",[t._v("TCP三次握手建立连接：http1.0每次请求都建立连接会很浪费时间，而http1.1引入了长连接概念（keep-alive：true 默认开启），可以在一次tcp连接中发送多个http请求。")]),t._v(" "),n("p",[t._v("http请求/响应：减少请求数（资源合并）、减小请求数据大小（代码压缩、图片压缩、http1.1的range特性）、缓存（http缓存、浏览器缓存）")]),t._v(" "),n("p",[t._v("解析渲染：")]),t._v(" "),n("p",[t._v("js性能量化API：performance，其中属性 timing 表示从输入 url 到可以使用页面的全过程时间统计，返回一个 PerformanceTiming 对象，单位均为毫秒。"),n("br"),t._v("\n常用计算：")]),t._v(" "),n("ul",[n("li",[t._v("DNS查询耗时 ：domainLookupEnd - domainLookupStart")]),t._v(" "),n("li",[t._v("TCP链接耗时 ：connectEnd - connectStart")]),t._v(" "),n("li",[t._v("request请求耗时 ：responseEnd - responseStart")]),t._v(" "),n("li",[t._v("解析dom树耗时 ： domComplete - domInteractive")]),t._v(" "),n("li",[t._v("白屏时间 ：responseStart - navigationStart")]),t._v(" "),n("li",[t._v("domready时间(用户可操作时间节点) ：domContentLoadedEventEnd - navigationStart")]),t._v(" "),n("li",[t._v("onload时间(总下载时间) ：loadEventEnd - navigationStart")])]),t._v(" "),n("p",[t._v("性能评估工具：lighthouse")]),t._v(" "),n("p",[t._v("图片优化：从图片的压缩算法角度")]),t._v(" "),n("ul",[n("li",[t._v("从模糊到清晰，小波算法，得到渐进式图片")]),t._v(" "),n("li",[t._v("从上到下逐渐显示，离散余弦算法，得到标准型图片")])])])}),[],!1,null,null,null);e.default=a.exports}}]);