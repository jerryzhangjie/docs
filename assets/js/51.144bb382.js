(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{406:function(_,t,a){"use strict";a.r(t);var v=a(44),n=Object(v.a)({},(function(){var _=this,t=_.$createElement,a=_._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h2",{attrs:{id:"_1-什么是算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是算法"}},[_._v("#")]),_._v(" 1. 什么是算法")]),_._v(" "),a("p",[_._v("解决特定问题的步骤就是算法")]),_._v(" "),a("h2",{attrs:{id:"_2-算法的5个特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法的5个特性"}},[_._v("#")]),_._v(" 2. 算法的5个特性")]),_._v(" "),a("p",[_._v("输入、输出、有穷性、确定性、可行性")]),_._v(" "),a("h2",{attrs:{id:"_3-算法的评价"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-算法的评价"}},[_._v("#")]),_._v(" 3. 算法的评价")]),_._v(" "),a("p",[_._v("分为时间复杂度（消耗的时间）、空间复杂度（消耗的空间）")]),_._v(" "),a("h2",{attrs:{id:"_4-时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-时间复杂度"}},[_._v("#")]),_._v(" 4. 时间复杂度")]),_._v(" "),a("p",[_._v("用 T(n) 来表示时间复杂度，代表算法执行所以消耗的时间。")]),_._v(" "),a("p",[_._v("一般有3种情况：Tmax 、Tmin 、Tavg ,如果没有特别提及，一般看作Tmax")]),_._v(" "),a("p",[_._v("一般 T(n) 算出来是比较复杂的，所以引入 O(n) 大O表达式")]),_._v(" "),a("p",[_._v("常见的时间复杂度量级及对应常见形式：")]),_._v(" "),a("ul",[a("li",[_._v("常数阶O(1)：普通语句(非循环等复杂结构)")]),_._v(" "),a("li",[_._v("线性阶O(n)：循环语句")]),_._v(" "),a("li",[_._v("平方阶O(n²)：双层循环语句")]),_._v(" "),a("li",[_._v("对数阶O(logN)：while循环")]),_._v(" "),a("li",[_._v("线性对数阶O(nlogN)：for循环内嵌套while循环")])]),_._v(" "),a("h2",{attrs:{id:"_5-空间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-空间复杂度"}},[_._v("#")]),_._v(" 5. 空间复杂度")]),_._v(" "),a("p",[_._v("用 S(n) 来表示时间复杂度。")]),_._v(" "),a("p",[_._v("一般 S(n) 算出来是比较复杂的，所以引入 O(n) 大O表达式")]),_._v(" "),a("h2",{attrs:{id:"_6-大o表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-大o表达式"}},[_._v("#")]),_._v(" 6. 大O表达式")]),_._v(" "),a("p",[_._v("如果存在一个 n0 和 C，使得当 n > n0 时，f(n) <= cg(n)，那么就称 g(n) 是 f(n) 的上界，记作 f(n)= O(g(n))")]),_._v(" "),a("p",[_._v("按定义我们不难得到 2n3+n2+1024 = O(n3) = O(n4) = O(n5) = ...")])])}),[],!1,null,null,null);t.default=n.exports}}]);