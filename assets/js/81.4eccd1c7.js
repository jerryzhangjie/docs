(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{436:function(e,n,t){"use strict";t.r(n);var s=t(44),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"页面埋点实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面埋点实践"}},[e._v("#")]),e._v(" 页面埋点实践")]),e._v(" "),t("blockquote",[t("p",[e._v("埋点即为监控用户行为而预先埋设的统计代码。埋点的用途很多，视场景而定，例如统计访问入口、访问量、点击量、停留时间、异常监控等等，它是用户调研的依据，是产品效果的佐证，对产品迭代至关重要。")])]),e._v(" "),t("h3",{attrs:{id:"一、埋点方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、埋点方式"}},[e._v("#")]),e._v(" 一、埋点方式")]),e._v(" "),t("p",[e._v("常见的埋点方式有以下几种：")]),e._v(" "),t("p",[t("strong",[e._v("1. 代码埋点")])]),e._v(" "),t("p",[e._v("所谓"),t("code",[e._v("代码埋点")]),e._v("，就是在需要统计数据的地方，植入发送埋点请求的代码，直接统计用户交互行为。\n"),t("strong",[e._v("优点")]),e._v("：针对性强，可实现精确埋点，且灵活度高，可针对几乎任何交互行为设置各种埋点信息。\n"),t("strong",[e._v("缺点")]),e._v("：业务代码与埋点代码耦合性强，工作量大，更新迭代代价大。")]),e._v(" "),t("p",[t("strong",[e._v("2. 无痕埋点")])]),e._v(" "),t("p",[t("code",[e._v("无痕埋点")]),e._v("并非不写代码，而是以高度解耦的形式，利用事件代理 + 元素路径的方式，实现非侵入无感知的埋点。\n"),t("strong",[e._v("优点")]),e._v("：高度解耦，工作量小，易维护。\n"),t("strong",[e._v("缺点")]),e._v("：记录行为信息少，不能禁用元素的事件冒泡。")]),e._v(" "),t("p",[t("strong",[e._v("3. 后端埋点")])]),e._v(" "),t("p",[t("code",[e._v("后端埋点")]),e._v("顾名思义，就是由服务器端、实现的埋点，主要针对数据交互行为的埋点，无法对用户非请求性行为埋点。\n"),t("strong",[e._v("优点")]),e._v("：可通过服务端日志获取埋点信息，减少请求数。\n"),t("strong",[e._v("缺点")]),e._v("：可监控行为类别较少，无法全方位监控用户行为。")]),e._v(" "),t("h3",{attrs:{id:"二、埋点实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、埋点实现"}},[e._v("#")]),e._v(" 二、埋点实现")]),e._v(" "),t("p",[e._v("本文仅介绍前端页面中的埋点实现，即"),t("code",[e._v("代码埋点")]),e._v("和"),t("code",[e._v("无痕埋点")]),e._v("。\n目前，针对埋点信息的通常做法是利用"),t("code",[e._v("img")]),e._v("标签的"),t("code",[e._v("src")]),e._v("属性，携带埋点数据传输到后台，进而针对数据做统计分析。")]),e._v(" "),t("p",[t("strong",[e._v("1. 代码埋点")])]),e._v(" "),t("p",[e._v("原理：事件触发时，创建一个img标签，在其src中携带想要传输的埋点数据，例如用户名、元素的唯一标识id等。\n以点击事件触发埋点用以统计点击量为例，伪代码实现如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("// 埋点核心\nclass Stat {\n  createImg () {\n    const IMG = document.createElement('img)\n    IMG.src = `image.baidu.com/test/demo.png?user_name=${obj.user_name}&ele_id=${obj.ele_id}`\n    docuemnt.body.appendChild(IMG)\n  }\n\n  log () {\n\n  }\n}\n\n// 点击时调用，触发埋点\nconst ST = new Stat()\ndocument.getElementById('#id-name').addEventListener('click', () => {\n  ...\n  ST.log({\n    user_name: userName,\n    ele_id: '123456'\n  })\n})\n")])])]),t("p",[t("strong",[e._v("2. 无痕埋点")])]),e._v(" "),t("p",[e._v("原理(以点击为例)：点用户点击时，获取元素到body之间整个dom的路径，作为该元素的唯一标识，称之为"),t("code",[e._v("domPath")]),e._v("，并将其与埋点数据一同传输至服务端。伪代码实现如下：\n(参考：https://github.com/airuikun/smart-tracker)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("// body绑定事件，捕获全局点击\ndocument.body.addEventListener('click', (event) => {\n  this.handleEvent(event);\n}, false)\n\n// 事件回调\nhandleEvent(event) {\n  const domPath = getDomPath(event.target);\n  const data = {\n    domPath: domPath,\n    trackingType: event.type\n  };\n  this.send(data);\n}\n\n// 获取元素唯一标识即dom路径domPath\ngetDomPath(element) {\n  let domPath = [];\n  let elem = element;\n  while (elem) {\n    let domDesc = getDomDesc(elem);\n    domPath.unshift(domDesc);\n    elem = elem.parentNode;\n  }\n  return domPath.join('>');   // eg. html>body>div[name=testwrapper]>#test>#btn \n}\n\n// 获取每一级元素的描述\ngetDomDesc(element, useClass = false) {\n  const domDesc = [];\n  if (!element || !element.tagName) {\n    return '';\n  }\n  if (element.id) {\n    return `#${element.id}`;\n  }\n  domDesc.push(element.tagName.toLowerCase());\n  if (useClass) {\n    const className = element.className;\n    if (className && typeof className === 'string') {\n      const classes = className.split(/\\s+/);\n      domDesc.push(`.${classes.join('.')}`);\n    }\n  }\n  if (element.name) {\n    domDesc.push(`[name=${element.name}]`);\n  }\n  return domDesc.join('');\n}\n\n// 发送埋点信息\nsend(data = {}) {\n  let image = new Image(1, 1);\n  image.onload = function () {\n    image = null;\n  };\n  image.src = `/?${stringify(data)}`;\n}\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);