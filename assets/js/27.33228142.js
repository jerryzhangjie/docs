(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{384:function(a,e,t){"use strict";t.r(e);var r=t(44),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"什么是-babel"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-babel"}},[a._v("#")]),a._v(" 什么是 babel")]),a._v(" "),t("p",[a._v("babel 是一个转译器，负责将 ES6+ 转译为 ES5。")]),a._v(" "),t("p",[a._v("注：编译器负责将高级语言编译为更低级别的语言。")]),a._v(" "),t("p",[a._v("babel 转译过程：解析（parser）、转译（traverse）、生成（generator）")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/jerry-zhang/image-database/raw/master/picgo/babel.jpg",alt:"babel"}})]),a._v(" "),t("h3",{attrs:{id:"_1-解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-解析"}},[a._v("#")]),a._v(" 1. 解析")]),a._v(" "),t("p",[a._v("接收 ES6+ 字符串，并输出 AST 对象。解析环节分为两步：词法分析和语法分析。Babel 使用 @babel/parser 解析代码。")]),a._v(" "),t("p",[t("strong",[a._v("词法分析")])]),a._v(" "),t("p",[a._v("根据JS语言规则将字符串形式的代码转换为令牌（tokens）流，它是JS语言的最小单元数组。")]),a._v(" "),t("p",[t("strong",[a._v("语法分析")])]),a._v(" "),t("p",[a._v("将令牌流转换为 AST 对象形式。")]),a._v(" "),t("h3",{attrs:{id:"_2-转译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-转译"}},[a._v("#")]),a._v(" 2. 转译")]),a._v(" "),t("p",[a._v("接收 AST 对象，并对其进行遍历，在此过程中完成对节点的修改、增加、删除等操作，最终返回修改后的 AST 对象。Babel 使用 @babel/traverse 转译代码。")]),a._v(" "),t("p",[a._v(".babelrc里配置的presets和plugins都是在转译期间工作的")]),a._v(" "),t("h3",{attrs:{id:"_3-生成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-生成"}},[a._v("#")]),a._v(" 3. 生成")]),a._v(" "),t("p",[a._v("遍历 AST 对象生成可以表示成 ES5 代码的字符串，同时创建源码映射（source maps）。Babel 使用 @babel/generator 生成代码。")])])}),[],!1,null,null,null);e.default=s.exports}}]);